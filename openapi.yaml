openapi: 3.0.0
info:
  title: Employee Management API
  description: API for managing employees
  version: 1.0.0
servers:
  - url: http://localhost:8080/api/v1
paths:
  /moods:
    post:
      summary: Create a new mood
      tags:
        - moods
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Mood"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Mood"
  /moods/{id}:
    get:
      summary: Get a mood by ID
      tags:
        - moods
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Mood"
  /students:
    get:
      summary: Get all students
      tags:
        - students
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Student"
    post:
      summary: Create a new student
      tags:
        - students
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Student"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
  /students/{id}:
    get:
      summary: Get a student by ID
      tags:
        - students
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
    put:
      summary: Update a student by ID
      tags:
        - students
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Student"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
    delete:
      summary: Delete a student by ID
      tags:
        - students
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No Content
  /students/detailed:
    get:
      summary: Get detailed student information
      description: Returns students with their latest attendance and mood data
      operationId: getDetailedStudents
      tags:
        - students
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StudentDetailedResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /supervisors:
    get:
      summary: Get all supervisors
      tags:
        - supervisors
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Supervisor"
    post:
      summary: Create a new supervisor
      tags:
        - supervisors
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Supervisor"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Supervisor"
  /supervisors/{id}:
    get:
      summary: Get a supervisor by ID
      tags:
        - supervisors
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Supervisor"
    put:
      summary: Update a supervisor by ID
      tags:
        - supervisors
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Supervisor"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Supervisor"
    delete:
      summary: Delete a supervisor by ID
      tags:
        - supervisors
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No Content
  /attendance/{id}:
    post:
      summary: Create a new attendance record
      tags:
        - attendance
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Attendance"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Attendance"
  /employers:
    post:
      summary: Create a new employer
      tags:
        - employers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Employer"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Employer"
  /employers/{id}:
    get:
      summary: Get an employer by ID
      tags:
        - employers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Employer"
    put:
      summary: Update an employer by ID
      tags:
        - employers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Employer"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Employer"
    delete:
      summary: Delete an employer by ID
      tags:
        - employers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No Content
  /dashboard:
    get:
      summary: Get student details for the dashboard
      description: Returns detailed student information including employer, attendance, and mood data.
      operationId: getStudentDetails
      tags:
        - dashboard
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StudentCard"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /generate-otp:
    post:
      summary: Generate OTP for a student
      description: Generate a new OTP for a student
      tags:
        - authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                student_id:
                  type: integer
                  example: 1
      responses:
        "200":
          description: OTP generated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OTPResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /validate-otp:
    post:
      summary: Validate OTP
      description: Validate an OTP and generate a secret code
      tags:
        - authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                otp_code:
                  type: string
                  example: "1234"
      responses:
        "200":
          description: OTP validated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OTPValidationResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /verify-device-auth:
    post:
      summary: Verify device authorization
      description: Verify if a device is authorized using student ID and secret code
      tags:
        - authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                student_id:
                  type: integer
                  example: 1
                secret_code:
                  type: string
                  example: "abcd1234"
      responses:
        "200":
          description: Device authorization verified successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  authorized:
                    type: boolean
                    example: true
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /employees:
    get:
      summary: Get employee data
      description: Fetch detailed employee data including student, employer, supervisor, and OTP information.
      tags:
        - employees
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EmployeeResponse"
              example:
                - student_id: 1
                  student_name: "John Doe"
                  student_contact: "1234567890"
                  employer_id: 101
                  employer_name: "Acme Corp"
                  employer_contact: "9876543210"
                  employer_address: "123 Main St, Suite 100, Springfield"
                  supervisor_id: 201
                  supervisor_name: "Jane Smith"
                  latest_otp_code: "1234"
                  expires_at: "2025-04-30T15:30:00Z"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  schemas:
    Mood:
      type: object
      properties:
        emotion:
          type: string
        id:
          type: integer
        is_daily:
          type: boolean
        recorded_at:
          type: string
        student_id:
          type: integer
    Student:
      type: object
      properties:
        id:
          type: integer
        first_name:
          type: string
        last_name:
          type: string
        dob:
          type: string
          format: date
        gender:
          type: string
        address_line1:
          type: string
        address_line2:
          type: string
        city:
          type: string
        contact_number:
          type: string
        contact_number_guardian:
          type: string
        supervisor_id:
          type: integer
        employer_id:
          type: integer
        remarks:
          type: string
        photo:
          type: string
          format: byte
        home_long:
          type: number
          format: float
        home_lat:
          type: number
          format: float
    Supervisor:
      type: object
      properties:
        contact_number:
          type: string
        email_address:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        student_id:
          type: integer
        supervisor_id:
          type: integer
    Employer:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        address:
          type: string
        contact_number:
          type: string
    Attendance:
      type: object
      properties:
        id:
          type: integer
        student_id:
          type: integer
        date:
          type: string
        status:
          type: string
    StudentDetailedResponse:
      type: object
      properties:
        student_id:
          type: integer
          format: int64
          example: 12345
        first_name:
          type: string
          example: "John"
        last_name:
          type: string
          example: "Doe"
        employer_name:
          type: string
          example: "Acme Corp"
        check_in_date_time:
          type: string
          format: date-time
          example: "2023-05-01T08:30:00Z"
        check_out_date_time:
          type: string
          format: date-time
          example: "2023-05-01T17:30:00Z"
        emotion:
          type: string
          example: "happy"
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: "Failed to retrieve student data"
    StudentCard:
      type: object
      properties:
        student_id:
          type: integer
          format: int64
          example: 12345
        first_name:
          type: string
          example: "John"
        last_name:
          type: string
          example: "Doe"
        employer_name:
          type: string
          nullable: true
          example: "Acme Corp"
        check_in_date_time:
          type: string
          format: date-time
          example: "2023-05-01T08:30:00Z"
        check_out_date_time:
          type: string
          format: date-time
          example: "2023-05-01T17:30:00Z"
        emotion:
          type: string
          example: "happy"
    OTPResponse:
      type: object
      properties:
        student_id:
          type: integer
          example: 1
        otp_code:
          type: string
          example: "1234"
        expires_at:
          type: string
          format: date-time
          example: "2025-04-30T15:30:00Z"
    OTPValidationResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        student_id:
          type: integer
          example: 1
        secret_code:
          type: string
          example: "abcd1234"
        message:
          type: string
          example: "Authentication successful"
    EmployeeResponse:
      type: object
      properties:
        student_id:
          type: integer
          example: 1
        student_name:
          type: string
          example: "John Doe"
        student_contact:
          type: string
          example: "1234567890"
        employer_id:
          type: integer
          nullable: true
          example: 101
        employer_name:
          type: string
          nullable: true
          example: "Acme Corp"
        employer_contact:
          type: string
          nullable: true
          example: "9876543210"
        employer_address:
          type: string
          nullable: true
          example: "123 Main St, Suite 100, Springfield"
        supervisor_id:
          type: integer
          nullable: true
          example: 201
        supervisor_name:
          type: string
          nullable: true
          example: "Jane Smith"
        latest_otp_code:
          type: string
          nullable: true
          example: "1234"
        expires_at:
          type: string
          format: date-time
          nullable: true
          example: "2025-04-30T15:30:00Z"
